# ==============================================================
# = Spring / boot
# ==============================================================

server.port=8081
#server.servlet.context-path= /demo

spring.mvc.view.prefix=/WEB-INF/pages/
spring.mvc.view.suffix=.jsp


# ==============================================================
# = Keep the connection alive if idle for a long time (needed in production)
# ==============================================================
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

#When in production/RELEASE version, you've to change to this
spring.datasource.tomcat.test-while-idle=false
spring.datasource.tomcat.validation-query=SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

#MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/workDB?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
spring.datasource.username=root
spring.datasource.password=123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#JPA
spring.jpa.open-in-view=false
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.use-new-id-generator-mappings=true
spring.jpa.show-sql=false
# Naming strategy
# Hibernate 5 provides only one implementation of PhysicalNamingStrategy
# (PhysicalNamingStrategyStandardImpl) that assumes physical identifier names
# are the same as logical ones.
#spring.jpa.properties.hibernate.physical_naming_strategy = org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# HikariCP
# spring.datasource.hikari.*
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.type=com.zaxxer.hikari.HikariDataSource


# ==============================================================
# = Spring / Log
# ==============================================================
## if no active profile, default is 'default'
logging.config= classpath:logback-spring.xml
#
spring.profiles.active=prod
#
#logging.level.org.springframework.web=error
#logging.level.com.example.demo=error
#logging.level.org.hibernate.SQL=off
#logging.level.org.hibernate.type.descriptor.sql=trace
#logging.level.=error
#
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
#logging.pattern.console=%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n
#logging.pattern.file=%d %p %c{1.} [%t] %m%n



# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
#spring.queries.users-query=select email, password, enabled from users where email=?
#spring.queries.roles-query=select u.email, r.role from users u inner join users_roles ur on(u.user_id=ur.user_id) inner join roles r on(ur.role_id=r.role_id) where u.email=?

#security.user.name=admin
#security.user.password=secret
#security.user.role=USER,ADMIN

# ==============================================================
# = Initialize the database using data sql script
# ==============================================================
spring.datasource.initialization-mode=always
spring.datasource.data=classpath:/static/data-import.sql


#spring.thymeleaf.enabled = true
spring.thymeleaf.enabled = false
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=utf-8
spring.thymeleaf.prefix=/WEB-INF/pages/

# ==============================================================
# = Initialize the email settings
# ==============================================================
spring.mail.default-encoding=UTF-8

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.protocol=smtp
spring.mail.username=stanislavgr79@gmail.com
spring.mail.password=RdsMutmsRvXAkvA5

spring.mail.test-connection=false
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000



mail.from=stanislavgr79@gmail.com

mail.register.message=email-register
mail.order.message[0]=email-newOrder
mail.order.message[1]=email-updateStatusOrder

mail.register.subject=You register In Shop.ru successfully!
mail.order.subject[0]=You have same order from Shop.ru
mail.order.subject[1]=You Order In Shop.ru ready!

#mail.transport.protocol=smtp
#mail.smtp.starttls.enable=true
#mail.debug=true
#mail.smtp.auth=true
#mail.smtp.quitwait=false
#mail.test-connection=false
#
#mail.server.host=smtp.gmail.com
#mail.server.port=587
#mail.server.protocol=smtp
#mail.server.username=stanislavgr79@gmail.com
#mail.server.password=RdsMutmsRvXAkvA5
